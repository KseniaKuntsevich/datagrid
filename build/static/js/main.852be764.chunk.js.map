{"version":3,"sources":["components/Datagrid.js","components/DatagridTable.js","components/DatagridHeader.js","components/HeaderTitles.js","components/HeaderToggle.js","components/HeaderSearches.js","components/MainSearch.js","components/SaveCSV.js","components/VirtualToggle.js","App.js","AppContainer.js","store/app/actions.js","serviceWorker.js","store/app/reducers.js","store/reducers.js","index.js"],"names":["Datagrid","content","onScroll","e","document","querySelectorAll","forEach","item","style","position","left","target","scrollLeft","className","header","body","DatagridTable","todo","activeColumns","onClick","colClasses","isTableVirtual","width","length","Row","index","isActive","map","column","i","isSticky","cl","backgroundColor","zIndex","height","key","itemCount","itemSize","DatagridHeader","rows","row","j","HeaderTitles","list","activeTitle","activeTitles","activeTitleIsUp","cursor","title","indexOf","isUp","HeaderToggle","titles","columnsStatus","HeaderSearches","categories","onStrSearch","val","value","toLowerCase","localStorage","setItem","search","defaultValue","getItem","onBlur","placeholder","src","alt","completedValues","name","colSearches","id","val1","val2","onChange","inps","getElementById","inpsLabels","textContent","type","min","max","default","step","user","completed","defaultChecked","htmlFor","importance","checked","category","activeOption","date","MainSearch","SaveCSV","csvContent","str","join","a","b","encodedUri","encodeURI","link","createElement","setAttribute","appendChild","click","VirtualToggle","App","props","isShiftDown","activeRows","onTittleClick","bind","onRowClick","deleteRow","onTittleSearch","onColumnToggle","onMultipleTittleClick","onTableIsVirtualToogle","activeFiltres","JSON","parse","addEventListener","this","names","fetch","then","rsponse","json","todos","Date","Math","floor","random","toLocaleString","push","Object","assign","setTodoToRender","setTodo","setColumnsStatus","setActiveColumns","setIsTodoLoaded","stringify","todoToRender","filter","data","keys","every","n","reduce","setIsTableVirtual","newTodoToRender","isClickedTwice","discardRows","hasOwnProperty","sort","getTodoFilteredBy","setActiveTitleIsUp","setActiveTitles","res","isEqual","nawActiveTitleIsUp","reverse","getTodoSortedBy","setActiveTitle","columnKey","isTodoLoaded","Component","mapDispatchToProps","payload","bool","AppContainer","connect","state","app","Boolean","window","location","hostname","match","defaultState","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.852be764.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Datagrid({ content }) {\n  const onScroll = (e) => {\n  \tconst list = document.querySelectorAll('.sticky-horizontal')\n  \tlist.forEach(item => {\n  \t\titem.style.position = 'fixed'\n  \t\titem.style.left = e.target.scrollLeft+ 14 + 'px'\n  \t})\n  }\n\n  return (\n    <div onScroll={onScroll} className=\"w-100 overflow-auto\">\n      {content.header}\n      {content.body}\n    </div>\n  );\n}\n\nexport default Datagrid;","import React from 'react';\nimport { FixedSizeList as List } from 'react-window';\n\nfunction DatagridTable({ todo, activeColumns, onClick, colClasses, isTableVirtual}) {\n\nlet width = activeColumns.length * 18\nwidth = width < 100 ? 100 : width\nwidth += '%'\n\n\nconst Row = ({ index, style }) => (\n  <div \n    className={todo[index].isActive ? \"row bg-secondary border-top\" : \"row border-top\"}\n    onClick={() => onClick(index)} \n    style={style}\n    >\n    {activeColumns.map((column, i) => {\n      const isSticky = column === 'user' || column === 'id'\n      let cl = isSticky ? 'sticky-horizontal position-absolute w-100' : ''\n      let style = isSticky ? {backgroundColor: todo[index].isActive ? '#6c757d' : '#f8f9fa', zIndex: 10, height: '36px'} : {}\n      return(\n        <div key={i} className={colClasses[column]}>\n          <div\n           style={style}\n           className={cl}>\n            <div className=\"pl-4\"> {todo[index][column]}</div>\n           </div>\n        </div>\n      )}\n     )}\n  </div>\n);\n\n  const Table = () => (\n\t  <List\n\t    height={1000}\n\t    itemCount={todo.length}\n\t    itemSize={37}\n\t    width={width}\n\t  >\n\t    {Row}\n\t  </List>\n\t);\n\n  const TableNotVirtual = () => (\n    <table style={{width}}>\n      <tbody>\n       {todo.map((item, i) => (\n           <tr><Row index={i} /></tr>\n        ))}\n      </tbody>\n    </table>\n  )\n\n  return (\n    <div>\n      <div className=\"container-fluid\">\n        {isTableVirtual ? <Table /> : <TableNotVirtual />}\n      </div>\n    </div>\n  );\n}\n\nexport default DatagridTable;\n\n\n","import React from 'react';\n\nfunction DatagridHeader({ rows }) {\n  return (\n  \t<div className='container-fluid p-0 m-0' >\n\t  \t{rows.map((row, j) => (\n\t  \t\t<div key={j}>\n\t  \t\t  { row }\n\t  \t\t</div>\n\t  \t))}\n  \t</div>\n  );\n}\n\nexport default DatagridHeader;","import React from 'react';\n\nfunction  HeaderTitles ({ list, onClick, activeTitle, activeTitles, activeTitleIsUp, colClasses }){\n  let width = list.length * 18\n  width = width < 100 ? 100 : width\n  width += '%'\n  return (\n    <div style={{width, cursor: 'pointer'}} className='row bg-light pl-3'>\n      {\n      \tlist.map((title, i) => {\n      \t\tconst isActive = title === activeTitle || activeTitles.indexOf(title) > -1\n      \t\tconst isUp = activeTitles.length ? false : activeTitleIsUp\n          const cl = isActive ? colClasses[title] + ' text-primary' : colClasses[title]\n      \t\treturn(\n      \t\t\t<div key={i} onClick={() => {onClick(title)}} className={cl}>\n\t\t\t      <div className='p-2'>{title} {isActive ? (isUp ? '/\\\\' : '\\\\/') : ''}</div>\n\t\t\t    </div>\n      \t\t)\n      \t})\n      }\n    </div>\n  );\n \n}\n\nexport default HeaderTitles;\n","import React from 'react';\n\nfunction HeaderToggle({ titles, onClick, columnsStatus }) {\n\n  return (\n    <ul className='pb-2 text-primary list-group list-group-horizontal pb-4'>\n      {titles.map((title, i) => <li key={i} className={columnsStatus[title] ? 'list-group-item' : 'list-group-item text-secondary'} onClick={() => onClick(title)}>{title}</li>)\n      }\n    </ul>\n  );\n}\n\nexport default HeaderToggle;","import React from 'react';\n\nfunction HeaderSearches({ list, onClick, colClasses }) {\n  const categories =['home', 'work', 'vocation', 'to buy']\n\n  const onStrSearch = (e, title) => {\n  \tconst val = e.target.value.toLowerCase()\n  \tlocalStorage.setItem(title, val)\n  \tonClick(title, val)\n  }\n\n  const search = (title, onClick) => (\n  \t<div className=\"input-group mb-3\">\n \t  \t<input \n\t  \tclassName=\"form-control\"\n\t  \tdefaultValue={localStorage.getItem(title)}\n\t  \tonBlur={(e) => onStrSearch(e, title)} \n\t  \tplaceholder='search' />\n\t    <button className=\"btn btn-light border\"><img src=\"https://image.flaticon.com/icons/svg/482/482631.svg\" style={{width: 15}} alt=\"search\"/></button>\n    </div>\n  \t)\n  \n  const categorySelect = (title, onClick) => {\n  \tconst activeOption = localStorage.getItem(title)\n    return (\n\t  <select defaultValue={activeOption} onChange={(e) => onStrSearch(e, title)} className=\"custom-select\">\n\t    <option value=''>Choose...</option>\n\t    {categories.map((category, i) => (<option key={i} value={category}>{category}</option>))}\n\t  </select>\n  )}\n\n  let completedValues = [{value: '', name: 'all'}, {value: 'yes', name: 'yes'}, {value: 'no', name: 'no'}]\n  const boolean = (title, onClick) => (\n  \t<div className=\"form\" onChange={(e) => onStrSearch(e, title)}>\n\t  \t{completedValues.map((item, i) => (\n\t\t  \t<div key={i} className=\"form-check form-check\">\n\t\t\t\t <input\n\t\t\t\t  className=\"form-check-input\"\n\t\t\t\t  type=\"radio\" name=\"inlineRadioOptions\"\n\t\t\t\t  id={\"inlineRadio\" + i}\n\t\t\t\t  value={item.value}\n\t\t\t\t  defaultChecked={localStorage.getItem(title) === item.value ? 'checked' : false}\n\t\t\t\t  />\n\t\t\t\t <label className=\"form-check-label\" htmlFor={\"inlineRadio\"+ i}>{item.name}</label>\n\t\t\t</div>\n\t\t))}\n\t</div>\n  )\n\n  const importanceSearch = (title, onClick) => (\n    <div>\n\t<input \n\t    onChange={(e) => {onClick(title, '')}}\n\t    className=\"form-check-input\"\n\t    type=\"checkbox\" name=\"inlineRadioOptions\"\n\t    id=\"rangeAll\"\n\t    value=''\n\t    defaultChecked={!localStorage.getItem(title)}\n\t    />\n\n\t<label className=\"form-check-label\" htmlFor=\"inlineRadio\">all</label>\n    <input onChange={(e) => { \n\t    \tdocument.getElementById('rangeAll').checked = false\n\t    \tconst val = e.target.value\n\t    \tlocalStorage.setItem(title, val)\n\t  \t\tonClick(title, val )\n\t    }}\n\t\ttype=\"range\"\n\t\tclassName=\"custom-range\"\n\t\tmin=\"1\"\n\t\tmax=\"10\"\n\t\tdefaultValue={localStorage.getItem(title)}\n\t\tid=\"customRange2\" />\n    </div>\n  )\n\n    const idSearch = (title, onClick) => {\n\t    const val1 = localStorage.getItem('doubleRange1') || 1\n\t    const val2 = localStorage.getItem('doubleRange2') || 1000\n\t    return (\n\t\t    <div id=\"doubleRange\" onChange={(e) => { \n\t\t\t    \tconst inps = document.getElementById('doubleRange').querySelectorAll('.doubleRange')\n\t\t\t    \tconst inpsLabels = document.getElementById('doubleRange').querySelectorAll('.doubleRange-label')\n\t\t\t    \tconst val1 = +inps[0].value\n\t\t\t    \tconst val2 = +inps[1].value\n\t\t\t    \tinpsLabels[0].textContent = val1\n\t\t\t    \tinpsLabels[1].textContent = val2\n\t\t\t    \tlocalStorage.setItem('doubleRange1', val1)\n\t\t\t    \tlocalStorage.setItem('doubleRange2', val2)\n\t\t\t  \t\tonClick(title, [val1, val2])\n\t\t\t     }}>\n\t\t        <label>from <span className=\"doubleRange-label\">{val1}</span></label>\n\t\t\t    <input defaultValue={val1} type=\"range\" className=\"custom-range doubleRange\" min=\"0\" max=\"1000\" default=\"1\" step=\"10\" id=\"customRange2\" />\n\t\t\t    <label>to <span className=\"doubleRange-label\">{val2}</span></label>\n\t\t\t    <input defaultValue={val2} type=\"range\" className=\"custom-range doubleRange\" min=\"0\" max=\"1000\" default=\"1000\" step=\"10\" id=\"customRange2\" />\n\t\t    </div>\n\t    )\n\t}\n\n  const colSearches = {\n  id: idSearch,\n  user: search,\n  title: search,\n  completed: boolean,\n  importance: importanceSearch,\n  category: categorySelect,\n  date: search,\n  }\n\n  let width = list.length * 18\n  width = width < 100 ? 100 : width\n  width += '%'\n\n  return (\n    <div style={{width}} className='row bg-light pb-4 pl-3'>\n      {list.map((item, i) => <div key={i} className={colClasses[item]}>{colSearches[item](item, onClick)}</div>)\n      }\n    </div>\n  );\n}\n\nexport default HeaderSearches;","import React from 'react';\n\nfunction MainSearch({ onClick }) {\n  return (\n    <div className=\"input-group mb-3\">\n \t  \t<input \n\t  \tclassName=\"form-control\"\n\t  \tdefaultValue={localStorage.getItem('mainSearch')}\n\t  \tonBlur={(e) => {\n\t  \t\tconst val = e.target.value.toLowerCase()\n\t  \t\tlocalStorage.setItem('mainSearch', val)\n\t  \t\tonClick('main', val)\n\t  \t}}\n\t  \tplaceholder='Search all' />\n\t    <button className=\"btn btn-light border\"><img src=\"https://image.flaticon.com/icons/svg/482/482631.svg\" style={{width: 15}} alt=\"search\"/></button>\n    </div>\n  );\n}\n\nexport default MainSearch;","import React from 'react';\n\nfunction SaveCSV({ todo, activeColumns }) {\n  const getTodoCVD = () => {\n  \treturn \"data:text/csv;charset=utf-8,\" \n\t    + todo.map(item => {\n\t    \tlet str = activeColumns.join(\", \") + \"\\n\"\n\t    \tactiveColumns.forEach((a, b) => str += item[a] + ' ')\n\t    \tstr += \"\\n\"\n\t    \treturn str\n\t    \t}).join(\"\\n\");\n\n  }\n  const save = () => {\n\tlet csvContent = getTodoCVD()\n\tvar encodedUri = encodeURI(csvContent);\n\tvar link = document.createElement(\"a\");\n\tlink.setAttribute(\"href\", encodedUri);\n\tlink.setAttribute(\"download\", \"my_data.csv\");\n\tdocument.body.appendChild(link); // Required for FF\n\n\tlink.click();\n\n  }\n\n  return (\n    <div style={{cursor: 'pointer'}} onClick={save} className='p-3 pb-4 text-right text-primary'>\n      Download\n      <img alt=\"csv\" style={{width: 20}} className='ml-2' src=\"https://image.flaticon.com/icons/svg/1263/1263920.svg\"/>\n    </div>\n  );\n}\n\nexport default SaveCSV;","import React from 'react';\n\nfunction VirtualToggle({ onClick, isActive }) {\n  let cl = \"p-3 text-right \"\n  cl += isActive ? \"text-danger\" : \"text-success\"\n  return (\n    <div className={cl}>\n \t  <span className=\"font-weight-bolder\" onClick={onClick}>Turn virtual {isActive ? 'Off' : \"On\"}</span>\n    </div>\n  );\n}\n\nexport default VirtualToggle;","import React, {Component} from 'react';\nimport Datagrid from './components/Datagrid.js';\nimport DatagridTable from './components/DatagridTable.js';\nimport DatagridHeader from './components/DatagridHeader.js';\n\nimport HeaderTitles from './components/HeaderTitles'\nimport HeaderToggle from './components/HeaderToggle'\nimport HeaderSearches from './components/HeaderSearches'\nimport MainSearch from './components/MainSearch'\nimport SaveCSV from './components/SaveCSV'\nimport VirtualToggle from './components/VirtualToggle'\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.isShiftDown = false;\n    this.activeRows = []\n    this.onTittleClick = this.onTittleClick.bind(this)\n    this.onRowClick = this.onRowClick.bind(this)\n    this.deleteRow = this.deleteRow.bind(this)\n    this.onTittleSearch = this.onTittleSearch.bind(this)\n    this.onColumnToggle = this.onColumnToggle.bind(this)\n    this.onMultipleTittleClick = this.onMultipleTittleClick.bind(this)\n    this.onTableIsVirtualToogle = this.onTableIsVirtualToogle.bind(this)\n    this.activeFiltres = JSON.parse(localStorage.getItem('activeFiltres')) || {}\n    this.titles = ['id', 'user', 'title', 'completed', 'importance', 'category', 'date']\n    this.colClasses = {\n      id: \"col-1\",\n      user: \"col\",\n      title: \"col-5\",\n      completed: \"col\",\n      importance: \"col\",\n      category: \"col\",\n      date: \"col-2\",\n    }\n\n    document.addEventListener('keydown', (e) => this.isShiftDown = e.key === 'Shift' ? true : this.isShiftDown )\n    document.addEventListener('keyup', (e) => this.isShiftDown = e.key === 'Shift' ? false : this.isShiftDown )\n  }\n\n  componentDidMount(){\n    if(this.props.todo.length) {\n      return \n    }\n    const names = ['Tom Plushkin', 'Anna Jukova', 'Petya Petrov', 'Lev Andreevich']\n    const categories =['home', 'work', 'vocation', 'to buy']\n    fetch('https://jsonplaceholder.typicode.com/todos').then(rsponse => rsponse.json())\n    .then(todos => {\n      todos.forEach(todo => {\n        const date = new Date(2019, Math.floor(Math.random() * 11), Math.floor(Math.random() * 28)+ 1)\n        todo.date = date.toLocaleString()\n        todo.importance = Math.floor(Math.random() * 10) + 1\n        todo.user = names[Math.floor(Math.random() * 4)]\n        todo.category = categories[Math.floor(Math.random() * 4)]\n        todo.completed = todo.completed ? 'yes' : 'no'\n      })\n      for(let i = 200; i < 1001; i++) {\n        todos.push(Object.assign({}, todos[i-200]))\n        todos[i].id = i\n      }\n      const activeColumns = {}\n      this.titles.forEach(key => activeColumns[key] = true)\n      this.props.setTodoToRender(todos)\n      this.props.setTodo(todos)\n      this.props.setColumnsStatus(activeColumns)\n      this.props.setActiveColumns(this.titles)\n      this.props.setIsTodoLoaded(true)\n      localStorage.setItem('todoToRender', JSON.stringify(this.props.todoToRender))\n      localStorage.setItem('todo', JSON.stringify(this.props.todo))\n      localStorage.setItem('columnsStatus', JSON.stringify(this.props.columnsStatus))\n      localStorage.setItem('activeColumns', JSON.stringify(this.props.activeColumns))\n      localStorage.setItem('isTodoLoaded', true)\n    })\n  }\n\n  getTodoFilteredBy(title, str) {\n    const { activeFiltres } = this\n    if(!str.length){\n      delete activeFiltres[title];\n    } else {\n      activeFiltres[title] = str;\n    }\n    localStorage.setItem('activeFiltres', JSON.stringify(activeFiltres))\n    return this.props.todo.filter(data => (\n      Object.keys(activeFiltres).every(title => {\n        let n = title === 'main' ? \n          Object.keys(data).reduce( (a, b) => (a + data[b]), '') :\n          data[title];\n\n        const val = activeFiltres[title]\n        if(title === 'importance'){\n          return +n === +val\n        } else if(title === 'id') {\n          return +n >= val[0] && +n <= val[1]\n        } else {\n          return n.toLowerCase().indexOf(val) > -1\n        }\n        \n      }\n      )\n    ))\n  }\n\n  onTableIsVirtualToogle(){\n    this.props.setIsTableVirtual(!this.props.isTableVirtual)\n  }\n\n  discardRows(){\n    this.activeRows.forEach(index => {\n      delete this.props.todoToRender[index].isActive\n    })\n    this.activeRows = []\n  }\n\n  onRowClick(index){\n    const newTodoToRender = [...this.props.todoToRender]\n    const isClickedTwice = this.activeRows.indexOf(index) > -1\n    newTodoToRender[index].isActive = true\n    if(!this.isShiftDown){ this.discardRows() }\n    if(!isClickedTwice){ this.activeRows.push(index) }\n    this.props.setTodoToRender(newTodoToRender)\n  }\n\n  deleteRow() {\n    const newTodoToRender = this.props.todoToRender.filter((n, i) => this.activeRows.indexOf(i) < 0)\n    this.props.setTodoToRender(newTodoToRender)\n    localStorage.setItem('todoToRender', JSON.stringify(newTodoToRender))\n  }\n\n  getTodoSortedBy(title) {\n    if(!this.props.todo[0].hasOwnProperty(title)) {\n      return this.props.todoToRender\n    }\n    return [...this.props.todoToRender].sort((a, b) => (a[title] < b[title] ? -1 : 1))\n  }\n\n  onTittleSearch(title, str) {\n    let newTodoToRender = this.getTodoFilteredBy(title, str)\n    this.props.setActiveTitleIsUp(false)\n    this.props.setTodoToRender(newTodoToRender)\n    localStorage.setItem('todoToRender', JSON.stringify(newTodoToRender))\n    localStorage.setItem('activeTitleIsUp', false)\n\n  }\n\n  onMultipleTittleClick(title){\n    const {activeTitles, setActiveTitles, activeTitle, todo, setTodoToRender} = this.props\n    activeTitles.push(title)\n    setActiveTitles(activeTitles)\n    const newTodoToRender = [...todo].sort((a, b) => {\n      let res = a[activeTitle] < b[activeTitle] ? -1 : 1\n      let isEqual = a[activeTitle] === b[activeTitle]\n      let i = 0\n      while(isEqual && activeTitles[i]){\n        res = a[activeTitles[i]] < b[activeTitles[i]] ? -1 : 1\n        isEqual = a[activeTitles[i]] === b[activeTitles[i]]\n        i += 1\n      }\n      return res\n    })\n    setTodoToRender(newTodoToRender)\n    localStorage.setItem('todoToRender', JSON.stringify(newTodoToRender))\n  }\n\n  onTittleClick(title){\n    if(this.isShiftDown){\n      this.onMultipleTittleClick(title)\n      return\n    }\n    this.props.setActiveTitles([])\n    const { activeTitle, activeTitleIsUp, todoToRender } = this.props\n    const nawActiveTitleIsUp = title === activeTitle ? !activeTitleIsUp : false\n    const newTodoToRender = title === activeTitle ? [...todoToRender].reverse() : this.getTodoSortedBy(title)\n    this.props.setActiveTitle(title)\n    this.props.setActiveTitleIsUp(nawActiveTitleIsUp)\n    this.props.setTodoToRender(newTodoToRender)\n    localStorage.setItem('activeTitle', title)\n    localStorage.setItem('activeTitleIsUp', nawActiveTitleIsUp)\n    localStorage.setItem('todoToRender', JSON.stringify(newTodoToRender))\n  }\n\n  onColumnToggle(columnKey){\n    const { setColumnsStatus, setActiveColumns, columnsStatus } = this.props\n    columnsStatus[columnKey] = !columnsStatus[columnKey]\n    setActiveColumns(this.titles.filter(title => columnsStatus[title]))\n    setColumnsStatus(columnsStatus)\n    localStorage.setItem('activeColumns', JSON.stringify(this.titles.filter(title => columnsStatus[title])))\n    localStorage.setItem('columnsStatus', JSON.stringify(columnsStatus))\n  }\n\n\n  render() {\n    return(\n      <div className=\"container-fluid p-0\">\n      <div className=\"p-4\">\n        <SaveCSV todo={this.props.todoToRender} activeColumns={this.props.activeColumns} />\n        <VirtualToggle onClick={this.onTableIsVirtualToogle} isActive={this.props.isTableVirtual} />\n        \n        <HeaderToggle onClick={this.onColumnToggle} titles={this.titles} columnsStatus={this.props.columnsStatus} />\n        <button onClick={this.deleteRow} className=\"btn btn-outline-danger mb-3\">Delete row</button>\n        \n        <MainSearch onClick={this.onTittleSearch}/>\n      </div>\n      { \n        this.props.isTodoLoaded ? \n        <Datagrid \n          content={{\n            header: \n            <DatagridHeader \n              rows={[\n                <HeaderTitles colClasses={this.colClasses} activeTitles={this.props.activeTitles} activeTitle={this.props.activeTitle} activeTitleIsUp={this.props.activeTitleIsUp} onClick={this.onTittleClick} list={this.props.activeColumns} />,\n                <HeaderSearches colClasses={this.colClasses} onClick={this.onTittleSearch} list={this.props.activeColumns}/>,\n              ]}\n             />,\n            body: \n            <DatagridTable\n              isTableVirtual={this.props.isTableVirtual}\n              colClasses={this.colClasses}\n              onClick={this.onRowClick}\n              activeColumns={this.props.activeColumns}\n              todo={this.props.todoToRender}  \n            />\n          }} \n        /> \n        : 'Processing...' \n      }\n      </div>\n    )\n\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react';\nimport App from './App'\n\nimport { connect } from 'react-redux';\n\nimport {\n  setTodoToRender,\n  setTodo,\n  setActiveTitle,\n  setActiveTitleIsUp,\n  setIsTodoLoaded,\n  setActiveColumns,\n  setColumnsStatus,\n  setActiveTitles,\n  setIsTableVirtual\n} from './store/app/actions'\n\n\n\n\nconst mapStateToProps = state => {\n  return {\n    activeTitle: state.app.activeTitle,\n    activeTitleIsUp: state.app.activeTitleIsUp,\n    isTodoLoaded: state.app.isTodoLoaded,\n    todo: state.app.todo,\n    todoToRender: state.app.todoToRender,\n    activeColumns: state.app.activeColumns,\n    columnsStatus: state.app.columnsStatus,\n    activeTitles: state.app.activeTitles,\n    isTableVirtual: state.app.isTableVirtual\n  }\n}\n \nconst mapDispatchToProps = {\n  setTodoToRender,\n  setTodo,\n  setActiveTitle,\n  setActiveTitleIsUp,\n  setIsTodoLoaded,\n  setActiveColumns,\n  setColumnsStatus,\n  setActiveTitles,\n  setIsTableVirtual\n}\n\n\n\nclass AppContainer extends Component {\n  render() {\n    return(\n      <App\n        activeTitle={this.props.activeTitle}\n        activeTitleIsUp={this.props.activeTitleIsUp}\n        isTodoLoaded={this.props.isTodoLoaded}\n        todo={this.props.todo} \n        todoToRender={this.props.todoToRender}\n        activeColumns={this.props.activeColumns}\n        columnsStatus={this.props.columnsStatus}\n        activeTitles={this.props.activeTitles}\n        isTableVirtual={this.props.isTableVirtual}\n\n        setTodoToRender={this.props.setTodoToRender} \n        setTodo={this.props.setTodo}\n        setActiveTitle={this.props.setActiveTitle}\n        setActiveTitleIsUp={this.props.setActiveTitleIsUp}\n        setIsTodoLoaded={this.props.setIsTodoLoaded}\n        setActiveColumns={this.props.setActiveColumns}\n        setColumnsStatus={this.props.setColumnsStatus}\n        setActiveTitles={this.props.setActiveTitles}\n        setIsTableVirtual={this.props.setIsTableVirtual}\n        />\n     \n    )\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer)\n \n","export const CHANGE_TODO_TO_RENDER = 'CHANGE_TODO_TO_RENDER'\nexport const CHANGE_TODO = 'CHANGE_TODO'\nexport const CHANGE_ACTIVE_TITLE = 'CHANGE_ACTIVE_TITLE'\nexport const CHANGE_ACTIVE_TITLE_IS_UP = 'CHANGE_ACTIVE_TITLE_IS_UP'\nexport const CHANGE_IS_TODO_LOADED = 'CHANGE_IS_TODO_LOADED'\nexport const CHANGE_ACTIVE_COLUMNS = 'CHANGE_ACTIVE_COLUMNS'\nexport const CHANGE_COLUMNS_STATUS = 'CHANGE_COLUMNS_STATUS'\nexport const CHANGE_ACTIVE_TITLES = 'CHANGE_ACTIVE_TITLES'\nexport const CHANGE_IS_TABLE_VIRTUAL = 'CHANGE_IS_TABLE_VIRTUAL'\n\nexport const setTodoToRender = todoToRender => ({\n\ttype: CHANGE_TODO_TO_RENDER,\n\tpayload: todoToRender\n})\n\nexport const setTodo = todo => ({\n\ttype: CHANGE_TODO,\n\tpayload: todo\n})\n\nexport const setActiveTitle = activeTitle => ({\n\ttype: CHANGE_ACTIVE_TITLE,\n\tpayload: activeTitle\n})\n\n\nexport const setActiveTitleIsUp = activeTitleIsUp => ({\n\ttype: CHANGE_ACTIVE_TITLE_IS_UP,\n\tpayload: activeTitleIsUp\n})\n\n\nexport const setIsTodoLoaded = isTodoLoaded => ({\n\ttype: CHANGE_IS_TODO_LOADED,\n\tpayload: isTodoLoaded\n})\n\nexport const setActiveColumns = activeColumns => ({\n\ttype: CHANGE_ACTIVE_COLUMNS,\n\tpayload: activeColumns\n})\n\nexport const setColumnsStatus = activeColumns => ({\n\ttype: CHANGE_COLUMNS_STATUS,\n\tpayload: activeColumns\n})\n\n\nexport const setActiveTitles = activeTitles => ({\n\ttype: CHANGE_ACTIVE_TITLES,\n\tpayload: activeTitles\n})\n\nexport const setIsTableVirtual = bool => ({\n\ttype: CHANGE_IS_TABLE_VIRTUAL,\n\tpayload: bool\n})\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n\tCHANGE_TODO_TO_RENDER, \n\tCHANGE_TODO,\n\tCHANGE_ACTIVE_TITLE,\n\tCHANGE_ACTIVE_TITLE_IS_UP,\n\tCHANGE_IS_TODO_LOADED,\n\tCHANGE_ACTIVE_COLUMNS,\n\tCHANGE_COLUMNS_STATUS,\n\tCHANGE_ACTIVE_TITLES,\n\tCHANGE_IS_TABLE_VIRTUAL\n} from './actions'\n\nconst defaultState = {\n  activeTitle: localStorage.getItem('activeTitle') || 'id',\n  activeTitleIsUp: localStorage.getItem('activeTitleIsUp') === 'true',\n  isTodoLoaded: localStorage.getItem('isTodoLoaded') || false,\n  todo: JSON.parse(localStorage.getItem('todo')) || [],\n  todoToRender : JSON.parse(localStorage.getItem('todoToRender')) || [],\n  activeColumns: JSON.parse(localStorage.getItem('activeColumns'))  || [],\n  columnsStatus: JSON.parse(localStorage.getItem('columnsStatus')) || {},\n  activeTitles: [],\n  isTableVirtual: true\n}\n\n\nexport const appReducer = (state = defaultState, action) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_TODO:\n\t\t    return {\n\t\t    \t...state,\n\t\t    \ttodo: action.payload\n\t\t    };\n\n\t\tcase CHANGE_TODO_TO_RENDER:\n\t\t    return {\n\t\t    \t...state,\n\t\t    \ttodoToRender: action.payload\n\t\t    };\n\n\t\tcase CHANGE_ACTIVE_TITLE:\n\t\t    return {\n\t\t    \t...state,\n\t\t    \tactiveTitle: action.payload\n\t\t    };\n\t\tcase CHANGE_ACTIVE_TITLE_IS_UP:\n\t\t    return {\n\t\t    \t...state,\n\t\t    \tactiveTitleIsUp: action.payload\n\t\t    };\n\n\t    case CHANGE_IS_TODO_LOADED:\n\t\t    return {\n\t\t    \t...state,\n\t\t    \tisTodoLoaded: action.payload\n\t\t    };\n\t\tcase CHANGE_ACTIVE_COLUMNS:\n\t\t    return {\n\t\t    \t...state,\n\t\t    \tactiveColumns: action.payload\n\t\t    };\n\t\tcase CHANGE_COLUMNS_STATUS:\n\t\t    return {\n\t\t    \t...state,\n\t\t    \tcolumnsStatus: action.payload\n\t\t    };\n\t\tcase CHANGE_ACTIVE_TITLES:\n\t\t    return {\n\t\t    \t...state,\n\t\t    \tactiveTitles: action.payload\n\t\t    };\n\t\tcase CHANGE_IS_TABLE_VIRTUAL:\n\t\t    return {\n\t\t    \t...state,\n\t\t    \tisTableVirtual: action.payload\n\t\t    };\n\t\tdefault: ;\n\t}\n\treturn state\n}","import { combineReducers } from 'redux';\nimport { appReducer } from './app/reducers';\n\nexport default combineReducers({\n\tapp: appReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './AppContainer';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css'\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './store/reducers';\n\nconst store = createStore(rootReducer)\n\n\n\nReactDOM.render(<Provider store={store}><AppContainer /></Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}